[project]
name = "scaffoldr"
version = "1.1.0"
description = "Generate production-ready Python web projects in seconds."
authors = [
	{ name = "Vetrichelvan", email = "pythonhubdev@gmail.com" }
]
requires-python = ">=3.13"
license = "MIT"
readme = "README.md"
keywords = ["FastAPI", "Flask", "Litestar", "SQLAlchemy", "Poetry", "UV", "Python", "CLI", "API", "Application", "Generator", "Architecture", "Scaffoldr"]
repository = "https://github.com/pythonhubdev/scaffoldr"
homepage = "https://github.com/pythonhubdev/scaffoldr"
classifiers = [
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.13",
	"Operating System :: OS Independent",
]
dependencies = [
	"python-semantic-release>=10.4.1",
	"typer>=0.19.2",
	"uv-build>=0.8.22",
	"rich>=13.7.0",
	"copier>=9.10.2",
]

[dependency-groups]
dev = [
	"basedpyright>=1.31.5",
	"commitizen>=4.9.1",
	"mypy>=1.18.2",
	"pre-commit>=4.3.0",
	"pytest>=8.4.2",
	"pytest-cov>=7.0.0",
	"pytest-rich>=0.2.0",
	"ruff>=0.13.2",
	"syrupy>=4.9.1",
]

[project.scripts]
scaffoldr = "scaffoldr.app:app"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true

[build-system]
requires = ["uv_build>=0.7.19,<0.8.22"]
build-backend = "uv_build"


[tool.mypy]
mypy_path = ["src"]
exclude = [
	"src/scaffoldr/templates/.*",
]
namespace_packages = true
explicit_package_bases = true

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
major_on_zero = true
build_command = "uv build"

[tool.pyrefly]
search-path = ["src"]

[semantic_release.branches.main]
match = "(main)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- ðŸ”¥ðŸ”¥ðŸ”¥ SEMANTIC RELEASE INSERTION POINT ðŸ”¥ðŸ”¥ðŸ”¥ -->"
template_dir = "templates"

[semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
make_initial_release = true

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
