"""Basic tests for the FastAPI application."""

import pytest
from fastapi.testclient import TestClient


class TestApp:
	"""Test cases for the main FastAPI application."""

	@pytest.mark.asyncio
	async def test_root_endpoint(self, client: TestClient) -> None:
		"""Test the root endpoint returns a successful response."""
		response = client.get("/")
		assert response.status_code == 200  # Health endpoint exists
		data = response.json()
		assert "status" in data
		assert data["status"] == "success"

	@pytest.mark.asyncio
	async def test_openapi_docs_available(self, client: TestClient) -> None:
		"""Test that OpenAPI documentation is available."""
		response = client.get("/docs")
		assert response.status_code == 200

	@pytest.mark.asyncio
	async def test_openapi_json_available(self, client: TestClient) -> None:
		"""Test that OpenAPI JSON specification is available."""
		response = client.get("/api/openapi.json")
		assert response.status_code == 200
		data = response.json()
		assert "info" in data
		assert "paths" in data

	@pytest.mark.asyncio
	async def test_health_check(self, client: TestClient) -> None:
		"""Test health check endpoint if it exists."""
		response = client.get("/health")
		# This might return 404 if no health endpoint is defined
		assert response.status_code in [200, 404]
